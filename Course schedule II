class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>> graph(numCourses);
        for(auto it : prerequisites){
            graph[it[0]].push_back(it[1]);
        }
        vector<int> v(numCourses,0);
        for(int i=0; i<graph.size(); i++){
            for(auto it : graph[i]){
                v[it]++;
            }
        }
        queue<int> q;

       for(int i=0; i<v.size(); i++){
        if(v[i]==0) q.push(i); 
       }
       vector<int> ans;
       while(!q.empty()){
        int x = q.front();
        q.pop();
        ans.push_back(x);
        for(auto it : graph[x]){
            if(v[it]>0){
                v[it]--;
                if(v[it]==0) q.push(it);
            }
        }
       }
       reverse(ans.begin(),ans.end());
       if(ans.size()==numCourses) return ans;
       ans.clear();
       return ans;


    }
};
