class Solution {
public:

    bool dfs (vector<vector<int>> &graph,int n,vector<int> &visited){
        int x = visited[n];
        bool ans=true,ans2=true;
        for(auto it : graph[n]){
            if(visited[it]==-1){
                visited[it]=abs(x-1);
               ans &= dfs(graph,it,visited);
            }
            else{
                if(visited[it]==x) {
                    ans2=false;
                }
            }
        }
        return ans&ans2;


    }

    bool isBipartite(vector<vector<int>>& graph) {
        vector<int> visited(graph.size(),-1);
        

    for(int i=0; i<graph.size(); i++){
        if(visited[i]==-1){
                visited[i]=0;
                bool ans = dfs(graph,i,visited);
                if(ans==false) return false;
        }
    }
    return true;

    }
};
