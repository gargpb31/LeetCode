class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        set<string> s;
        for(int i=0; i<wordList.size(); i++){
            s.insert(wordList[i]);
        }

        queue<pair<string,int>> q;

        if(s.find(endWord)==s.end()) return 0;

        q.push({beginWord,0});
        s.erase(beginWord);
        while(!q.empty()){
            string s1 = q.front().first;
            int y = q.front().second;
            if(s1==endWord) return y+1;
            q.pop();

            for(int j=0; j<s1.size(); j++){
                string s2 = s1;
            for(int i=0; i<26; i++){
                    char d = 'a'+i;
                    s2[j]=d;
                    if(s.find(s2)!=s.end()){
                        s.erase(s2);
                        q.push({s2,y+1});
                    }

            }

            }
        }
        return 0;
    }
};
