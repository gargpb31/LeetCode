class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> visited(numCourses,0);

        vector<vector<int>> graph(numCourses);
        vector<int> v(numCourses,0);
        for(auto it : prerequisites){
            graph[it[0]].push_back(it[1]);
            v[it[1]]++;
        }

        queue<int> q;
        for(int i=0; i<v.size(); i++) {
            if(v[i]==0) {
                q.push(i);
            }
        }

        while(!q.empty()){
            int x = q.front();
            q.pop();
            visited[x]=1;

            for(auto it : graph[x]){
                if(v[it]>0){
                    if(v[it]==1) q.push(it);
                    v[it]--;
                }
            }
        }
        for(auto it : visited){
            if(it==0) return false;
        }
        return true;

     
    }
};
